{"version":3,"file":"login-Ezyb6znk.js","sources":["../../../../pages/login.vue"],"sourcesContent":["<template>\n  <div class=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-br from-blue-100 via-purple-100 to-white px-4\">\n    <div class=\"bg-white rounded-xl shadow-xl p-8 max-w-sm w-full text-center\">\n      <h1 class=\"text-2xl font-bold text-gray-800 mb-4\">QR 코드 로그인</h1>\n      <p class=\"text-sm text-gray-600 mb-6\">QR 코드를 스캔해주세요</p>\n\n      <button\n        v-if=\"!isScanning\"\n        class=\"bg-blue-600 hover:bg-blue-700 text-white font-semibold py-3 px-6 rounded-full transition\"\n        @click=\"startScan\"\n      >\n        QR코드로 로그인\n      </button>\n\n      <div class=\"mt-6 mb-6\">\n        <button \n        v-if=\"!isScanningTeacher\"\n        @click=\"startScanTeacher\" class=\"text-blue-600 underline text-sm hover:text-blue-800\">\n            선생님이신가요?\n        </button>\n        </div>\n\n      <qrcode-stream\n        v-if=\"isScanning\"\n        @detect=\"onDetect\"\n        @error=\"onError\"\n      />\n      <qrcode-stream\n        v-if=\"isScanningTeacher\"\n        @detect=\"onDetectTeacher\"\n        @error=\"onErrorTeacher\"\n      />\n\n      <p v-if=\"error\" class=\"text-red-500 text-sm mt-4\">{{ error }}</p>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\nconst isScanning = ref(false)\nconst isScanningTeacher = ref(false)\nconst error = ref('')\nconst errorTeacher = ref('')\nconst router = useRouter()\n\nconst startScan = () => {\n  isScanning.value = true\n  error.value = ''\n}\nconst startScanTeacher = () => {\n  isScanningTeacher.value = true\n  errorTeacher.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\n  if (!url) return\n\n  isScanning.value = false\n  router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\nconst onDetectTeacher = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\n  if (!url) return\n\n  isScanning.value = false\n  router.push('/teacher/' + url)\n}\n\nconst onErrorTeacher = (err) => {\n  errorTeacher.value = '카메라 접근 실패'\n  console.error(err)\n  isScanningTeacher.value = false\n}\n</script>\n\n<script>\nexport default {\n  components: {\n    QrcodeStream: () => import('vue-qrcode-reader').then(m => m.QrcodeStream)\n  }\n}\n</script>"],"names":["_ssrRenderAttrs","_mergeProps"],"mappings":";;;;AAyFA,MAAe,cAAA;AAAA,EACb,YAAY;AAAA,IACV,cAAc,MAAM,OAAO,mBAAmB,EAAE,KAAK,OAAK,EAAE,YAAY;AAAA,EAC5E;AACA;;;;;AAlDA,UAAM,aAAa,IAAI,KAAK;AAC5B,UAAM,oBAAoB,IAAI,KAAK;AACnC,UAAM,QAAQ,IAAI,EAAE;AACpB,UAAM,eAAe,IAAI,EAAE;AAC3B,UAAM,SAAS,UAAS;AAWxB,UAAM,WAAW,CAAC,kBAAkB;;AAClC,YAAM,OAAM,mBAAc,CAAC,MAAf,mBAAkB;AAC9B,UAAI,CAAC;AAAK;AAEV,iBAAW,QAAQ;AACnB,aAAO,KAAK,WAAW,GAAG;AAAA,IAC5B;AAEA,UAAM,UAAU,CAAC,QAAQ;AACvB,YAAM,QAAQ;AACd,cAAQ,MAAM,GAAG;AACjB,iBAAW,QAAQ;AAAA,IACrB;AAGA,UAAM,kBAAkB,CAAC,kBAAkB;;AACzC,YAAM,OAAM,mBAAc,CAAC,MAAf,mBAAkB;AAC9B,UAAI,CAAC;AAAK;AAEV,iBAAW,QAAQ;AACnB,aAAO,KAAK,cAAc,GAAG;AAAA,IAC/B;AAEA,UAAM,iBAAiB,CAAC,QAAQ;AAC9B,mBAAa,QAAQ;AACrB,cAAQ,MAAM,GAAG;AACjB,wBAAkB,QAAQ;AAAA,IAC5B;;AApFO,YAAA,OAAAA,eAAAC,WAAA,EAAA,OAAM,yHAAqH,MAAA,CAAA,CAAA,qMAAA;WAMnH,WAAU,OAAA;;;;;;WASV,kBAAiB,OAAA;;;;;;UAOlB,WAAU,OAAA;;UACf;AAAA,UACA;AAAA;;;;UAGK,kBAAiB,OAAA;;UACtB,UAAQ;AAAA,UACR,SAAO;AAAA;;;;UAGD,MAAK,OAAA;qEAAuC,MAAK,KAAA,CAAA,MAAA;AAAA;;;;;;;;;;;;;"}