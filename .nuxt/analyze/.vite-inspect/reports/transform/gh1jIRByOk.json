{
  "resolvedId": "/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue?vue&type=script&setup=true&lang.ts",
  "transforms": [
    {
      "name": "vite:vue",
      "result": "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ProseScript',\n  props: {\n  src: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n\nconst isDev = import.meta.dev\n\nreturn (_ctx: any,_cache: any) => {\n  return (_unref(isDev))\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [\n        _createTextVNode(\" Rendering the \"),\n        _createElementVNode(\"code\", null, \"script\", -1),\n        _createTextVNode(\" element is dangerous and is disabled by default. Consider implementing your own \"),\n        _createElementVNode(\"code\", null, \"ProseScript\", -1),\n        _createTextVNode(\" element to have control over script rendering. \")\n      ])))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})",
      "start": 1748499205066,
      "end": 1748499205066
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748499205066,
      "end": 1748499205066,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748499205066,
      "end": 1748499205066,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1748499205066,
      "end": 1748499205066,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1748499205066,
      "end": 1748499205066,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748499205066,
      "end": 1748499205066,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748499205066,
      "end": 1748499205066,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = { key: 0 };\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ProseScript\",\n  props: {\n    src: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    const isDev = import.meta.dev;\n    return (_ctx, _cache) => {\n      return _unref(isDev) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [\n        _createTextVNode(\" Rendering the \"),\n        _createElementVNode(\"code\", null, \"script\", -1),\n        _createTextVNode(\" element is dangerous and is disabled by default. Consider implementing your own \"),\n        _createElementVNode(\"code\", null, \"ProseScript\", -1),\n        _createTextVNode(\" element to have control over script rendering. \")\n      ]))) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1748499205066,
      "end": 1748499205496,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxtjs/mdc/dist/runtime/components/prose/ProseScript.vue?vue&type=script&setup=true&lang.ts"
        ],
        "sourcesContent": [
          "import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { key: 0 }\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'ProseScript',\n  props: {\n  src: {\n    type: String,\n    default: ''\n  }\n},\n  setup(__props) {\n\n\nconst isDev = import.meta.dev\n\nreturn (_ctx: any,_cache: any) => {\n  return (_unref(isDev))\n    ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [\n        _createTextVNode(\" Rendering the \"),\n        _createElementVNode(\"code\", null, \"script\", -1),\n        _createTextVNode(\" element is dangerous and is disabled by default. Consider implementing your own \"),\n        _createElementVNode(\"code\", null, \"ProseScript\", -1),\n        _createTextVNode(\" element to have control over script rendering. \")\n      ])))\n    : _createCommentVNode(\"\", true)\n}\n}\n\n})"
        ],
        "mappings": "AAAA,SAAS,mBAAmB,wBAAwB;AACpD,SAAS,SAAS,QAAQ,sBAAsB,qBAAqB,mBAAmB,kBAAkB,aAAa,YAAY,sBAAsB,qBAAqB,sBAAsB,2BAA2B;AAE/N,MAAM,aAAa,EAAE,KAAK,EAAE;AAG5B,eAA4B,iCAAiB;AAAA,EAC3C,QAAQ;AAAA,EACR,OAAO;AAAA,IACP,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF;AAAA,EACE,MAAM,SAAS;AAGjB,UAAM,QAAQ,YAAY;AAE1B,WAAO,CAAC,MAAU,WAAgB;AAChC,aAAQ,OAAO,KAAK,KACf,WAAW,GAAG,oBAAoB,OAAO,YAAY,OAAO,CAAC,MAAM,OAAO,CAAC,IAAI;AAAA,QAC9E,iBAAiB,iBAAiB;AAAA,QAClC,oBAAoB,QAAQ,MAAM,UAAU,EAAE;AAAA,QAC9C,iBAAiB,mFAAmF;AAAA,QACpG,oBAAoB,QAAQ,MAAM,eAAe,EAAE;AAAA,QACnD,iBAAiB,kDAAkD;AAAA,MACrE,EAAE,KACF,oBAAoB,IAAI,IAAI;AAAA,IAClC;AAAA,EACA;AAEA,CAAC;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "replace",
      "result": "import { defineComponent as _defineComponent } from \"vue\";\nimport { unref as _unref, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = { key: 0 };\nexport default /* @__PURE__ */ _defineComponent({\n  __name: \"ProseScript\",\n  props: {\n    src: {\n      type: String,\n      default: \"\"\n    }\n  },\n  setup(__props) {\n    const isDev = false;\n    return (_ctx, _cache) => {\n      return _unref(isDev) ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _cache[0] || (_cache[0] = [\n        _createTextVNode(\" Rendering the \"),\n        _createElementVNode(\"code\", null, \"script\", -1),\n        _createTextVNode(\" element is dangerous and is disabled by default. Consider implementing your own \"),\n        _createElementVNode(\"code\", null, \"ProseScript\", -1),\n        _createTextVNode(\" element to have control over script rendering. \")\n      ]))) : _createCommentVNode(\"\", true);\n    };\n  }\n});\n",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzpO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAe;AACjv
      }
    },
    {
      "name": "ssr-styles",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748499205496,
      "end": 1748499205496,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748499205496,
      "end": 1748499205497,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748499205497,
      "end": 1748499205497,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748499205497,
      "end": 1748499205497,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748499205497,
      "end": 1748499205497,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748499205497,
      "end": 1748499205497,
      "order": "normal"
    }
  ]
}
