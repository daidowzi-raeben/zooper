{
  "resolvedId": "/Users/jang-yeong-ug/Documents/zooper/node_modules/packrup/dist/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "function asArray(input) {\n  return Array.isArray(input) ? input : [input];\n}\nconst InternalKeySymbol = \"_$key\";\nfunction packObject(input, options) {\n  const keys = Object.keys(input);\n  let [k, v] = keys;\n  options = options || {};\n  options.key = options.key || k;\n  options.value = options.value || v;\n  options.resolveKey = options.resolveKey || ((k2) => k2);\n  const resolveKey = (index) => {\n    const arr = asArray(options[index]);\n    return arr.find((k2) => {\n      if (typeof k2 === \"string\" && k2.includes(\".\")) {\n        return k2;\n      }\n      return k2 && keys.includes(k2);\n    });\n  };\n  const resolveValue = (k2, input2) => {\n    if (k2.includes(\".\")) {\n      const paths = k2.split(\".\");\n      let val = input2;\n      for (const path of paths)\n        val = val[path];\n      return val;\n    }\n    return input2[k2];\n  };\n  k = resolveKey(\"key\") || k;\n  v = resolveKey(\"value\") || v;\n  const dedupeKeyPrefix = input.key ? `${InternalKeySymbol}${input.key}-` : \"\";\n  let keyValue = resolveValue(k, input);\n  keyValue = options.resolveKey(keyValue);\n  return {\n    [`${dedupeKeyPrefix}${keyValue}`]: resolveValue(v, input)\n  };\n}\n\nfunction packArray(input, options) {\n  const packed = {};\n  for (const i of input) {\n    const packedObj = packObject(i, options);\n    const pKey = Object.keys(packedObj)[0];\n    const isDedupeKey = pKey.startsWith(InternalKeySymbol);\n    if (!isDedupeKey && packed[pKey]) {\n      packed[pKey] = Array.isArray(packed[pKey]) ? packed[pKey] : [packed[pKey]];\n      packed[pKey].push(Object.values(packedObj)[0]);\n    } else {\n      packed[isDedupeKey ? pKey.split(\"-\").slice(1).join(\"-\") || pKey : pKey] = packedObj[pKey];\n    }\n  }\n  return packed;\n}\n\nfunction packString(input) {\n  const output = {};\n  input.split(\" \").forEach(\n    (item) => {\n      const val = item.replace(/\"/g, \"\").split(\"=\");\n      output[val[0]] = val[1];\n    }\n  );\n  return output;\n}\n\nfunction unpackToArray(input, options) {\n  const unpacked = [];\n  const kFn = options.resolveKeyData || ((ctx) => ctx.key);\n  const vFn = options.resolveValueData || ((ctx) => ctx.value);\n  for (const [k, v] of Object.entries(input)) {\n    unpacked.push(...(Array.isArray(v) ? v : [v]).map((i) => {\n      const ctx = { key: k, value: i };\n      const val = vFn(ctx);\n      if (typeof val === \"object\")\n        return unpackToArray(val, options);\n      if (Array.isArray(val))\n        return val;\n      return {\n        [typeof options.key === \"function\" ? options.key(ctx) : options.key]: kFn(ctx),\n        [typeof options.value === \"function\" ? options.value(ctx) : options.value]: val\n      };\n    }).flat());\n  }\n  return unpacked;\n}\n\nfunction unpackToString(value, options) {\n  return Object.entries(value).map(([key, value2]) => {\n    if (typeof value2 === \"object\")\n      value2 = unpackToString(value2, options);\n    if (options.resolve) {\n      const resolved = options.resolve({ key, value: value2 });\n      if (typeof resolved !== \"undefined\")\n        return resolved;\n    }\n    if (typeof value2 === \"number\")\n      value2 = value2.toString();\n    if (typeof value2 === \"string\" && options.wrapValue) {\n      value2 = value2.replace(new RegExp(options.wrapValue, \"g\"), `\\\\${options.wrapValue}`);\n      value2 = `${options.wrapValue}${value2}${options.wrapValue}`;\n    }\n    return `${key}${options.keyValueSeparator || \"\"}${value2}`;\n  }).join(options.entrySeparator || \"\");\n}\n\nexport { InternalKeySymbol, packArray, packObject, packString, unpackToArray, unpackToString };\n",
      "start": 1748836718190,
      "end": 1748836718590,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748836718590,
      "end": 1748836718590,
      "order": "normal"
    }
  ]
}
