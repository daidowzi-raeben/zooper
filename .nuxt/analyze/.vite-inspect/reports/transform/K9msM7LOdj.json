{
  "resolvedId": "/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxthq/studio/dist/runtime/plugins/preview.client.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { defineNuxtPlugin, useCookie, useRoute, useRuntimeConfig, useState } from \"#imports\";\nexport default defineNuxtPlugin((nuxtApp) => {\n  const runtimeConfig = useRuntimeConfig().public.studio || {};\n  const route = useRoute();\n  const previewToken = useCookie(\"previewToken\", { sameSite: \"none\", secure: true });\n  const storage = useState(\"studio-client-db\", () => null);\n  async function initializePreview() {\n    const useStudio = await import(\"../composables/useStudio\").then((m) => m.useStudio);\n    const { mountPreviewUI, initiateIframeCommunication } = useStudio();\n    mountPreviewUI();\n    initiateIframeCommunication();\n  }\n  if (runtimeConfig.apiURL) {\n    if (Object.prototype.hasOwnProperty.call(route.query, \"preview\") && !route.query.preview) {\n      return;\n    }\n    if (!route.query.preview && !previewToken.value) {\n      return;\n    }\n    if (route.query.preview) {\n      previewToken.value = String(route.query.preview);\n    }\n    window.sessionStorage.setItem(\"previewToken\", String(previewToken.value));\n    nuxtApp.hook(\"content:storage\", (_storage) => {\n      storage.value = _storage;\n    });\n    nuxtApp.hook(\"app:mounted\", async () => {\n      await initializePreview();\n    });\n  }\n});\n",
      "start": 1748498858760,
      "end": 1748498858802,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748498858802,
      "end": 1748498858802,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748498858802,
      "end": 1748498858803,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { defineNuxtPlugin, useRuntimeConfig } from '#app/nuxt';\nimport { useCookie } from '#app/composables/cookie';\nimport { useRoute } from '#app/composables/router';\nimport { useState } from '#app/composables/state';\nexport default defineNuxtPlugin((nuxtApp) => {\n  const runtimeConfig = useRuntimeConfig().public.studio || {};\n  const route = useRoute();\n  const previewToken = useCookie(\"previewToken\", { sameSite: \"none\", secure: true });\n  const storage = useState(\"studio-client-db\", () => null);\n  async function initializePreview() {\n    const useStudio = await import(\"../composables/useStudio\").then((m) => m.useStudio);\n    const { mountPreviewUI, initiateIframeCommunication } = useStudio();\n    mountPreviewUI();\n    initiateIframeCommunication();\n  }\n  if (runtimeConfig.apiURL) {\n    if (Object.prototype.hasOwnProperty.call(route.query, \"preview\") && !route.query.preview) {\n      return;\n    }\n    if (!route.query.preview && !previewToken.value) {\n      return;\n    }\n    if (route.query.preview) {\n      previewToken.value = String(route.query.preview);\n    }\n    window.sessionStorage.setItem(\"previewToken\", String(previewToken.value));\n    nuxtApp.hook(\"content:storage\", (_storage) => {\n      storage.value = _storage;\n    });\n    nuxtApp.hook(\"app:mounted\", async () => {\n      await initializePreview();\n    });\n  }\n});\n",
      "start": 1748498858803,
      "end": 1748498858804,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";;;;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjrtlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACN,CAAC,CAAC;AACF,CAAC,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1748498858804,
      "end": 1748498858805,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { defineNuxtPlugin, useRuntimeConfig } from '#app/nuxt';\nimport { useCookie } from '#app/composables/cookie';\nimport { useRoute } from '#app/composables/router';\nimport { useState } from '#app/composables/state';\nexport default defineNuxtPlugin((nuxtApp) => {\n  const runtimeConfig = useRuntimeConfig().public.studio || {};\n  const route = useRoute();\n  const previewToken = useCookie(\"previewToken\", { sameSite: \"none\", secure: true });\n  const storage = useState(\"studio-client-db\", () => null);\n  async function initializePreview() {\n    const useStudio = await __vitePreload(() => import(\"../composables/useStudio\"),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then((m) => m.useStudio);\n    const { mountPreviewUI, initiateIframeCommunication } = useStudio();\n    mountPreviewUI();\n    initiateIframeCommunication();\n  }\n  if (runtimeConfig.apiURL) {\n    if (Object.prototype.hasOwnProperty.call(route.query, \"preview\") && !route.query.preview) {\n      return;\n    }\n    if (!route.query.preview && !previewToken.value) {\n      return;\n    }\n    if (route.query.preview) {\n      previewToken.value = String(route.query.preview);\n    }\n    window.sessionStorage.setItem(\"previewToken\", String(previewToken.value));\n    nuxtApp.hook(\"content:storage\", (_storage) => {\n      storage.value = _storage;\n    });\n    nuxtApp.hook(\"app:mounted\", async () => {\n      await initializePreview();\n    });\n  }\n});\n",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1748498858805,
      "end": 1748498858805,
      "order": "normal"
    }
  ]
}
