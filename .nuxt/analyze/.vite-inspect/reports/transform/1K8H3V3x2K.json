{
  "resolvedId": "/Users/jang-yeong-ug/Documents/zooper/pages/teacher/index.vue?macro=true",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup>\nimport { onMounted, ref } from 'vue'\nimport { apiPost, apiPoint, apiTeacher } from '@/common/api'\nimport * as XLSX from 'xlsx/dist/xlsx.full.min.js'\n//  QR\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\n\nconst GenerateUUID = () => {\n  const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let result = ''\n  for (let i = 0; i < 10; i++) {\n    const r = Math.floor(Math.random() * chars.length)\n    result += chars[r]\n  }\n  return result\n}\nconst isScanning = ref(false)\nconst error = ref('')\nconst teacherInfo = ref({})\n\nconst logout = () => {\n  sessionStorage.removeItem('idnt_code')\n  sessionStorage.removeItem('student')\n  sessionStorage.removeItem('t_idnt_code')\n  sessionStorage.removeItem('teacher')\n  window.location.href = '/login'\n}\n\nconst startScan = () => {\n\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  if (amountInput.value > memberPoint.value) {\n    alert('잔액이 부족합니다.')\n    return\n  }\n\n  isScanning.value = true\n  error.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\n  if (url === sessionStorage.getItem('t_idnt_code')) {\n    handleDeposit()\n  } else {\n    isScanning.value = false\n    return alert('인증오류')\n  }\n  if (!url) return\n\n  isScanning.value = false\n  //   router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\n//  QR\nconst points = ref([])\nconst page = ref(1)\nconst isLoading = ref(false)\nconst hasMore = ref(true)\n\nconst studentOptions = ref([])\nconst selectedStudent = ref(null)\nconst selectedStudentName = ref(null)\nconst amountInput = ref(null)\n\nconst fetchPoints = async (v) => {\n  if (isLoading.value || !hasMore.value) return\n\n  const idnt_code = selectedStudent.value\n  if (!idnt_code) return\n\n  isLoading.value = true\n\n  try {\n    const res = await apiPost('bank.php', {\n      mode: 'history',\n      idnt_code,\n      page: v || page.value,\n      rows: 10,\n    })\n\n    if (res.result === 'SUCCESS' && Array.isArray(res.data)) {\n      if (res.data.length === 0) {\n        hasMore.value = false\n      } else {\n        points.value.push(...res.data)\n        page.value++\n      }\n    } else {\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('포인트 조회 실패:', error)\n    hasMore.value = false\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst fetchStudents = async () => {\n  const teacher = JSON.parse(sessionStorage.getItem('teacher'))?.idx\n  if (!teacher) return\n\n  const res = await apiPost('member.php', {\n    mode: 'studentList',\n    teacher\n  })\n\n  if (res.result === 'SUCCESS') {\n    memberPoint.value = await apiPoint()\n    studentOptions.value = res.data.map(s => ({\n      label: s.student_name,\n      value: s.idnt_code\n    }))\n  }\n}\n\nonMounted(async () => {\n  if (!sessionStorage.getItem('t_idnt_code')) {\n    alert('비정상 접근입니다.')\n    logout()\n    return;\n  }\n  // fetchPoints()\n  fetchStudents()\n  window.addEventListener('scroll', handleScroll)\n\n  const point = await apiPoint()\n  memberPoint.value = point\n  console.log('내 포인트:', point)\n\n  teacherInfo.value = await apiTeacher()\n})\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight\n  const bottomPosition = document.body.offsetHeight - 50\n  if (scrollPosition >= bottomPosition) {\n    fetchPoints()\n  }\n}\n\n\nconst memberPoint = ref(0)\nconst handleDeposit = async () => {\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  const res = await apiPost('bank.php', {\n    mode: 'deposit',\n    from_idnt_code: sessionStorage.getItem('t_idnt_code'),\n    to_idnt_code: selectedStudent.value,\n    point: parseInt(amountInput.value)\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('출금 완료')\n\n    // 리스트 초기화 및 다시 조회\n    page.value = 1\n    points.value = []\n    hasMore.value = true\n    await fetchPoints(1)\n\n    amountInput.value = null\n    selectedStudent.value = null\n  } else {\n    alert(res.message || '출금에 실패했습니다.')\n  }\n}\nconst handleStudentClick = (idnt_code, mb_name) => {\n  selectedStudent.value = idnt_code;\n  selectedStudentName.value = mb_name;\n  fetchPoints()\n  // console.log('선택된 학생:', idnt_code);\n  // window.open('/sign/' + idnt_code)\n};\n\n// 우리반 설정 저장 함수\nconst saveClassSettings = async () => {\n  const res = await apiPost('teacher.php', {\n    mode: 'updateInfo',\n    idnt_code: sessionStorage.getItem('t_idnt_code'),\n    class_name: teacherInfo.value.class_name || '',\n    currency_name: teacherInfo.value.currency_name || ''\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('저장되었습니다.');\n  } else {\n    alert('저장에 실패했습니다.');\n  }\n}\n\nconst onClickDownload = () => {\n  window.open('http://api.school-os.net/jelly/data/class.xlsx')\n\n}\n\nconst printStudentQR = () => {\n\n  if (!teacherInfo.value.class_name || !teacherInfo.value.currency_name) return alert('우리반 설정 완료 후 가능합니다.')\n  window.open('https://api.school-os.net/jelly/qr.php?idnt_code=' + sessionStorage.getItem('t_idnt_code'))\n}\n\nconst onClickLogin = () => {\n\n  window.open('/sign/' + selectedStudent.value)\n}\n\n\nconst isUploadModalOpen = ref(false)\nconst uploadedFile = ref(null)\n\nconst handleFileUpload = async (e) => {\n  const file = uploadedFile.value\n  if (!file) {\n    alert('파일을 선택해주세요')\n    return\n  }\n\n  const reader = new FileReader()\n  reader.onload = async (evt) => {\n    const data = new Uint8Array(evt.target.result)\n    const workbook = XLSX.read(data, { type: 'array' })\n    const firstSheetName = workbook.SheetNames[0]\n    const worksheet = workbook.Sheets[firstSheetName]\n\n    // 엑셀 -> JSON 변환\n    const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: '' })\n\n    // 여기서 필요한 컬럼명 매핑 (엑셀 헤더에 따라 다름)\n    const students = jsonData.map(row => ({\n      idnt_code: GenerateUUID(), // JS에서 UUID 생성하거나 서버에서 처리\n      student_name: row['이름'],\n      student_grade: row['학년'],\n      student_class: row['반'],\n      mb_point: row['포인트'] || 0,\n      student_number: row['학번'],\n      birth_date: row['생년월일'], // YYYY-MM-DD 형식\n      gender: row['성별'],\n      guardian_name: row['보호자'],\n      guardian_phone: row['연락처'],\n      address: row['주소'],\n      teacher: JSON.parse(sessionStorage.getItem('teacher'))?.idx,\n      pay_name: row['화폐이름'],\n      role_code: null\n    })).concat([\n      {\n        idnt_code: GenerateUUID(),\n        student_name: '선생님',\n        student_grade: null,\n        student_class: null,\n        mb_point: 0,\n        student_number: 0,\n        birth_date: null,\n        gender: null,\n        guardian_name: null,\n        guardian_phone: null,\n        address: null,\n        teacher: JSON.parse(sessionStorage.getItem('teacher'))?.idx,\n        pay_name: null,\n        role_code: '1'\n      },\n      {\n        idnt_code: GenerateUUID(),\n        student_name: '관리자',\n        student_grade: null,\n        student_class: null,\n        mb_point: 0,\n        student_number: 0,\n        birth_date: null,\n        gender: null,\n        guardian_name: null,\n        guardian_phone: null,\n        address: null,\n        teacher: JSON.parse(sessionStorage.getItem('teacher'))?.idx,\n        pay_name: null,\n        role_code: '1'\n      }\n    ])\n\n    console.log(students)\n\n\n    // API 호출\n    try {\n      const res = await apiPost('teacher.php', {\n        mode: 'studentInsert',\n        data: students\n      })\n\n      if (res.result === 'SUCCESS') {\n        alert('업로드 성공')\n        window.location.reload()\n      } else {\n        alert(res.message || '업로드 실패')\n      }\n    } catch (error) {\n      alert('서버 오류 발생')\n      console.error(error)\n    }\n  }\n\n  reader.readAsArrayBuffer(file)\n}\n\n\nconst onClickUpload = () => {\n  isUploadModalOpen.value = true\n}\nconst onFileChange = (e) => {\n  uploadedFile.value = e.target.files[0]\n}\n</script>\n\n<template>\n  <div class=\"mt-4\">\n\n    <UModal v-model=\"isUploadModalOpen\">\n      <div class=\"p-4 space-y-4\">\n        <h2 class=\"text-lg font-bold\">엑셀 업로드</h2>\n        <UInput type=\"file\" accept=\".xls,.xlsx\" @change=\"onFileChange\" />\n        <div class=\"flex justify-end gap-2\">\n          <UButton label=\"취소\" color=\"gray\" @click=\"isUploadModalOpen = false\" />\n          <UButton label=\"업로드\" color=\"blue\" @click=\"handleFileUpload\" />\n        </div>\n      </div>\n    </UModal>\n    <div class=\"space-y-4\">\n      <!-- 환영 메시지 -->\n      <div class=\"flex gap-2\">\n        <UButton label=\"엑셀샘플 다운로드\" color=\"gray\" @click=\"onClickDownload\" />\n        <UButton label=\"엑셀업로드\" color=\"gray\" @click=\"onClickUpload\" />\n        <UButton label=\"학생 QR카드 인쇄하기\" color=\"gray\" @click=\"printStudentQR\" />\n        <UButton label=\"초기화\" color=\"red\" @click=\"printStudentQR\" style=\"margin-left:auto;\" />\n      </div>\n      <div class=\"flex justify-between items-center\">\n        <p class=\"text-lg font-semibold text-gray-700\">\n          {{ teacherInfo?.mb_name }}\n          선생님, 환영합니다 👋</p>\n        <button\n          class=\"flex items-center gap-2 bg-white text-red-500 border border-red-300 px-3 py-1 rounded-full shadow-sm hover:bg-red-50 transition\"\n          @click=\"logout\">\n          <span class=\"i-heroicons-arrow-right-on-rectangle w-4 h-4\" />\n          로그아웃\n        </button>\n      </div>\n      <!-- 내 잔액 -->\n      <div\n        class=\"col-span-2 rounded-2xl shadow-md p-4 bg-gradient-to-r from-green-400 to-blue-500 text-white flex justify-between items-center\">\n        <div class=\"flex flex-col justify-center\">\n          <p class=\"text-sm opacity-80\">국고 잔액</p>\n          <p class=\"text-2xl font-bold\">\n            <span>\n              💰 {{ Number(teacherInfo?.mb_point || 0).toLocaleString() }} <span\n                class=\"text-sm font-normal align-middle\">{{ teacherInfo?.currency_name }}</span>\n            </span>\n          </p>\n        </div>\n        <!-- <UButton label=\"이체하기\" color=\"white\" class=\"text-blue-800 bg-white bg-opacity-90 hover:bg-opacity-100\"\n          @click=\"$router.push('/transfer')\" /> -->\n      </div>\n      <!-- 추가 카드 영역: 누적 세금 + 누적 벌금 -->\n      <div class=\"flex gap-4 mt-4\">\n        <!-- 카드 1: 누적 세금 -->\n        <div\n          class=\"flex-1 rounded-2xl shadow-md p-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white flex justify-between items-center\">\n          <div class=\"flex flex-col justify-center\">\n            <p class=\"text-sm opacity-80\">누적 세금</p>\n            <p class=\"text-2xl font-bold\">\n              🧾 {{ Number(teacherInfo?.tax || 0).toLocaleString() }} <span class=\"text-sm font-normal align-middle\">{{\n                teacherInfo?.currency_name }}</span>\n            </p>\n          </div>\n          <UButton label=\"내역\" color=\"white\" class=\"text-orange-800 bg-white bg-opacity-90 hover:bg-opacity-100\" />\n        </div>\n\n        <!-- 카드 2: 누적 벌금 -->\n        <div\n          class=\"flex-1 rounded-2xl shadow-md p-4 bg-gradient-to-r from-red-400 to-rose-500 text-white flex justify-between items-center\">\n          <div class=\"flex flex-col justify-center\">\n            <p class=\"text-sm opacity-80\">누적 벌금</p>\n            <p class=\"text-2xl font-bold\">\n              🚨 {{ Number(teacherInfo?.penalty || 0).toLocaleString() }} <span\n                class=\"text-sm font-normal align-middle\">\n                {{ teacherInfo?.currency_name }}</span>\n            </p>\n          </div>\n          <UButton label=\"내역\" color=\"white\" class=\"text-rose-800 bg-white bg-opacity-90 hover:bg-opacity-100\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"mt-10\">\n      <!-- 우리반 설정 -->\n      <div class=\"space-y-2 mb-10\">\n        <p class=\"text-lg font-semibold text-gray-700\">우리반 설정</p>\n        <div class=\"flex gap-4 items-center\">\n          <UInput v-model=\"teacherInfo.class_name\" placeholder=\"학급명 (예: 젤리)\" class=\"flex-1\" />\n          <UInput v-model=\"teacherInfo.currency_name\" placeholder=\"화폐이름 (예: 젤리코인)\" class=\"flex-1\" />\n          <UButton label=\"저장\" color=\"blue\" @click=\"saveClassSettings\" />\n        </div>\n      </div>\n      <div class=\"flex justify-between items-center\">\n        <p class=\"text-lg font-semibold text-gray-700\">\n          우리반 학생\n        </p>\n        <!-- http://api.school-os.net/jelly/data/class.xlsx -->\n\n      </div>\n      <div class=\"mb-6 flex items-center gap-3\">\n        <!-- studentOptions 출력: 해시태그 스타일 -->\n        <div class=\"flex flex-wrap gap-2 mt-4\">\n\n          <div v-for=\"student in studentOptions\" :key=\"student.value\"\n            @click=\"handleStudentClick(student.value, student.label)\"\n            class=\"px-4 py-1 bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-full text-sm cursor-pointer transition\">\n            {{ student.label }}\n          </div>\n        </div>\n      </div>\n      <div style=\"height:30px;\">\n\n        <UButton v-if=\"selectedStudentName\" :label=\"`${selectedStudentName} 학생으로 로그인 하기`\" color=\"blue\"\n          class=\"w-full justify-center text-center\" @click=\"onClickLogin\" />\n      </div>\n      <!-- <p class=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n        입금 할 친구를 선택하고 금액을 입력하세요\n      </p>\n      <div class=\"flex items-center gap-3 mt-6\">\n        <USelect v-model=\"selectedStudent\" :options=\"studentOptions\" placeholder=\"학생 선택\" class=\"w-40\" size=\"lg\" />\n        <UInput v-model=\"amountInput\" placeholder=\"입금액을 입력하세요\" icon=\"i-heroicons-currency-dollar\"\n          class=\"flex-1 text-right\" input-class=\"text-right\" type=\"tel\" size=\"lg\" />\n        <UButton label=\"이체하기\" size=\"lg\" color=\"black\" @click=\"startScan()\" />\n      </div>\n      <div v-if=\"isScanning\">\n        <div\n          style=\"background-color: #000; position: fixed; top:0; left:0; width:100%; height:100%; z-index:99; opacity: 0.6;\">\n        </div>\n        <qrcode-stream\n          style=\"top:50%; left:50%; z-index:99; position: fixed; transform: translate(-50%,-50%); max-width:400px; max-height:400px;\"\n          @detect=\"onDetect\" @error=\"onError\" />\n      </div> -->\n    </div>\n    <div class=\"mt-10\">\n      <h2 class=\"uppercase text-xs font-semibold text-gray-400 mb-4\">최근 입출금내역</h2>\n      <div class=\"space-y-5\">\n        <div v-for=\"item in points\" :key=\"item.idx\" class=\"flex items-center gap-4 dark:hover:text-gray-300 group\">\n          <span class=\"text-sm leading-none\">\n            {{ item.description }} ({{ item.point_type === 'save' ? '+' : '-' }}{{ item.point.toLocaleString() }}P)\n          </span>\n          <div\n            class=\"flex-1 border-b border-dashed border-gray-300 dark:border-gray-800 group-hover:border-gray-700 mt-1.5\">\n          </div>\n          <span class=\"text-xs text-gray-500 leading-none\">\n            {{ item.c_datetime }}\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  components: {\n    QrcodeStream: () => import('vue-qrcode-reader').then(m => m.QrcodeStream)\n  }\n}\n</script>\n\n<!-- const printStudentQR = () => {\n  alert('학생 QR카드를 인쇄합니다.');\n  // 실제 인쇄 구현은 추후 추가\n}; -->\n",
      "start": 1748577034812,
      "end": 1748577034908,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748577034908,
      "end": 1748577034908,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = { class: \"mt-4\" }\nconst _hoisted_2 = { class: \"p-4 space-y-4\" }\nconst _hoisted_3 = { class: \"flex justify-end gap-2\" }\nconst _hoisted_4 = { class: \"space-y-4\" }\nconst _hoisted_5 = { class: \"flex gap-2\" }\nconst _hoisted_6 = { class: \"flex justify-between items-center\" }\nconst _hoisted_7 = { class: \"text-lg font-semibold text-gray-700\" }\nconst _hoisted_8 = { class: \"col-span-2 rounded-2xl shadow-md p-4 bg-gradient-to-r from-green-400 to-blue-500 text-white flex justify-between items-center\" }\nconst _hoisted_9 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_10 = { class: \"text-2xl font-bold\" }\nconst _hoisted_11 = { class: \"text-sm font-normal align-middle\" }\nconst _hoisted_12 = { class: \"flex gap-4 mt-4\" }\nconst _hoisted_13 = { class: \"flex-1 rounded-2xl shadow-md p-4 bg-gradient-to-r from-yellow-400 to-orange-500 text-white flex justify-between items-center\" }\nconst _hoisted_14 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_15 = { class: \"text-2xl font-bold\" }\nconst _hoisted_16 = { class: \"text-sm font-normal align-middle\" }\nconst _hoisted_17 = { class: \"flex-1 rounded-2xl shadow-md p-4 bg-gradient-to-r from-red-400 to-rose-500 text-white flex justify-between items-center\" }\nconst _hoisted_18 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_19 = { class: \"text-2xl font-bold\" }\nconst _hoisted_20 = { class: \"text-sm font-normal align-middle\" }\nconst _hoisted_21 = { class: \"mt-10\" }\nconst _hoisted_22 = { class: \"space-y-2 mb-10\" }\nconst _hoisted_23 = { class: \"flex gap-4 items-center\" }\nconst _hoisted_24 = { class: \"mb-6 flex items-center gap-3\" }\nconst _hoisted_25 = { class: \"flex flex-wrap gap-2 mt-4\" }\nconst _hoisted_26 = [\"onClick\"]\nconst _hoisted_27 = { style: {\"height\":\"30px\"} }\nconst _hoisted_28 = { class: \"mt-10\" }\nconst _hoisted_29 = { class: \"space-y-5\" }\nconst _hoisted_30 = { class: \"text-sm leading-none\" }\nconst _hoisted_31 = { class: \"text-xs text-gray-500 leading-none\" }\n\nimport { onMounted, ref } from 'vue'\nimport { apiPost, apiPoint, apiTeacher } from '@/common/api'\nimport * as XLSX from 'xlsx/dist/xlsx.full.min.js'\n//  QR\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\n\n\nconst __default__ = {\n  components: {\n    QrcodeStream: () => import('vue-qrcode-reader').then(m => m.QrcodeStream)\n  }\n}\n\n\nconst _sfc_main = /*@__PURE__*/Object.assign(__default__, {\n  __name: 'index',\n  setup(__props) {\n\nconst GenerateUUID = () => {\n  const chars = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n  let result = ''\n  for (let i = 0; i < 10; i++) {\n    const r = Math.floor(Math.random() * chars.length)\n    result += chars[r]\n  }\n  return result\n}\nconst isScanning = ref(false)\nconst error = ref('')\nconst teacherInfo = ref({})\n\nconst logout = () => {\n  sessionStorage.removeItem('idnt_code')\n  sessionStorage.removeItem('student')\n  sessionStorage.removeItem('t_idnt_code')\n  sessionStorage.removeItem('teacher')\n  window.location.href = '/login'\n}\n\nconst startScan = () => {\n\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  if (amountInput.value > memberPoint.value) {\n    alert('잔액이 부족합니다.')\n    return\n  }\n\n  isScanning.value = true\n  error.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\n  if (url === sessionStorage.getItem('t_idnt_code')) {\n    handleDeposit()\n  } else {\n    isScanning.value = false\n    return alert('인증오류')\n  }\n  if (!url) return\n\n  isScanning.value = false\n  //   router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\n//  QR\nconst points = ref([])\nconst page = ref(1)\nconst isLoading = ref(false)\nconst hasMore = ref(true)\n\nconst studentOptions = ref([])\nconst selectedStudent = ref(null)\nconst selectedStudentName = ref(null)\nconst amountInput = ref(null)\n\nconst fetchPoints = async (v) => {\n  if (isLoading.value || !hasMore.value) return\n\n  const idnt_code = selectedStudent.value\n  if (!idnt_code) return\n\n  isLoading.value = true\n\n  try {\n    const res = await apiPost('bank.php', {\n      mode: 'history',\n      idnt_code,\n      page: v || page.value,\n      rows: 10,\n    })\n\n    if (res.result === 'SUCCESS' && Array.isArray(res.data)) {\n      if (res.data.length === 0) {\n        hasMore.value = false\n      } else {\n        points.value.push(...res.data)\n        page.value++\n      }\n    } else {\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('포인트 조회 실패:', error)\n    hasMore.value = false\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst fetchStudents = async () => {\n  const teacher = JSON.parse(sessionStorage.getItem('teacher'))?.idx\n  if (!teacher) return\n\n  const res = await apiPost('member.php', {\n    mode: 'studentList',\n    teacher\n  })\n\n  if (res.result === 'SUCCESS') {\n    memberPoint.value = await apiPoint()\n    studentOptions.value = res.data.map(s => ({\n      label: s.student_name,\n      value: s.idnt_code\n    }))\n  }\n}\n\nonMounted(async () => {\n  if (!sessionStorage.getItem('t_idnt_code')) {\n    alert('비정상 접근입니다.')\n    logout()\n    return;\n  }\n  // fetchPoints()\n  fetchStudents()\n  window.addEventListener('scroll', handleScroll)\n\n  const point = await apiPoint()\n  memberPoint.value = point\n  console.log('내 포인트:', point)\n\n  teacherInfo.value = await apiTeacher()\n})\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight\n  const bottomPosition = document.body.offsetHeight - 50\n  if (scrollPosition >= bottomPosition) {\n    fetchPoints()\n  }\n}\n\n\nconst memberPoint = ref(0)\nconst handleDeposit = async () => {\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  const res = await apiPost('bank.php', {\n    mode: 'deposit',\n    from_idnt_code: sessionStorage.getItem('t_idnt_code'),\n    to_idnt_code: selectedStudent.value,\n    point: parseInt(amountInput.value)\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('출금 완료')\n\n    // 리스트 초기화 및 다시 조회\n    page.value = 1\n    points.value = []\n    hasMore.value = true\n    await fetchPoints(1)\n\n    amountInput.value = null\n    selectedStudent.value = null\n  } else {\n    alert(res.message || '출금에 실패했습니다.')\n  }\n}\nconst handleStudentClick = (idnt_code, mb_name) => {\n  selectedStudent.value = idnt_code;\n  selectedStudentName.value = mb_name;\n  fetchPoints()\n  // console.log('선택된 학생:', idnt_code);\n  // window.open('/sign/' + idnt_code)\n};\n\n// 우리반 설정 저장 함수\nconst saveClassSettings = async () => {\n  const res = await apiPost('teacher.php', {\n    mode: 'updateInfo',\n    idnt_code: sessionStorage.getItem('t_idnt_code'),\n    class_name: teacherInfo.value.class_name || '',\n    currency_name: teacherInfo.value.currency_name || ''\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('저장되었습니다.');\n  } else {\n    alert('저장에 실패했습니다.');\n  }\n}\n\nconst onClickDownload = () => {\n  window.open('http://api.school-os.net/jelly/data/class.xlsx')\n\n}\n\nconst printStudentQR = () => {\n\n  if (!teacherInfo.value.class_name || !teacherInfo.value.currency_name) return alert('우리반 설정 완료 후 가능합니다.')\n  window.open('https://api.school-os.net/jelly/qr.php?idnt_code=' + sessionStorage.getItem('t_idnt_code'))\n}\n\nconst onClickLogin = () => {\n\n  window.open('/sign/' + selectedStudent.value)\n}\n\n\nconst isUploadModalOpen = ref(false)\nconst uploadedFile = ref(null)\n\nconst handleFileUpload = async (e) => {\n  const file = uploadedFile.value\n  if (!file) {\n    alert('파일을 선택해주세요')\n    return\n  }\n\n  const reader = new FileReader()\n  reader.onload = async (evt) => {\n    const data = new Uint8Array(evt.target.result)\n    const workbook = XLSX.read(data, { type: 'array' })\n    const firstSheetName = workbook.SheetNames[0]\n    const worksheet = workbook.Sheets[firstSheetName]\n\n    // 엑셀 -> JSON 변환\n    const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: '' })\n\n    // 여기서 필요한 컬럼명 매핑 (엑셀 헤더에 따라 다름)\n    const students = jsonData.map(row => ({\n      idnt_code: GenerateUUID(), // JS에서 UUID 생성하거나 서버에서 처리\n      student_name: row['이름'],\n      student_grade: row['학년'],\n      student_class: row['반'],\n      mb_point: row['포인트'] || 0,\n      student_number: row['학번'],\n      birth_date: row['생년월일'], // YYYY-MM-DD 형식\n      gender: row['성별'],\n      guardian_name: row['보호자'],\n      guardian_phone: row['연락처'],\n      address: row['주소'],\n      teacher: JSON.parse(sessionStorage.getItem('teacher'))?.idx,\n      pay_name: row['화폐이름'],\n      role_code: null\n    })).concat([\n      {\n        idnt_code: GenerateUUID(),\n        student_name: '선생님',\n        student_grade: null,\n        student_class: null,\n        mb_point: 0,\n        student_number: 0,\n        birth_date: null,\n        gender: null,\n        guardian_name: null,\n        guardian_phone: null,\n        address: null,\n        teacher: JSON.parse(sessionStorage.getItem('teacher'))?.idx,\n        pay_name: null,\n        role_code: '1'\n      },\n      {\n        idnt_code: GenerateUUID(),\n        student_name: '관리자',\n        student_grade: null,\n        student_class: null,\n        mb_point: 0,\n        student_number: 0,\n        birth_date: null,\n        gender: null,\n        guardian_name: null,\n        guardian_phone: null,\n        address: null,\n        teacher: JSON.parse(sessionStorage.getItem('teacher'))?.idx,\n        pay_name: null,\n        role_code: '1'\n      }\n    ])\n\n    console.log(students)\n\n\n    // API 호출\n    try {\n      const res = await apiPost('teacher.php', {\n        mode: 'studentInsert',\n        data: students\n      })\n\n      if (res.result === 'SUCCESS') {\n        alert('업로드 성공')\n        window.location.reload()\n      } else {\n        alert(res.message || '업로드 실패')\n      }\n    } catch (error) {\n      alert('서버 오류 발생')\n      console.error(error)\n    }\n  }\n\n  reader.readAsArrayBuffer(file)\n}\n\n\nconst onClickUpload = () => {\n  isUploadModalOpen.value = true\n}\nconst onFileChange = (e) => {\n  uploadedFile.value = e.target.files[0]\n}\n\nreturn (_ctx, _cache) => {\n  const _component_UInput = _resolveComponent(\"UInput\")\n  const _component_UButton = _resolveComponent(\"UButton\")\n  const _component_UModal = _resolveComponent(\"UModal\")\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_UModal, {\n      modelValue: isUploadModalOpen.value,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => ((isUploadModalOpen).value = $event))\n    }, {\n      default: _withCtx(() => [\n        _createElementVNode(\"div\", _hoisted_2, [\n          _cache[4] || (_cache[4] = _createElementVNode(\"h2\", { class: \"text-lg font-bold\" }, \"엑셀 업로드\", -1)),\n          _createVNode(_component_UInput, {\n            type: \"file\",\n            accept: \".xls,.xlsx\",\n            onChange: onFileChange\n          }),\n          _createElementVNode(\"div\", _hoisted_3, [\n            _createVNode(_component_UButton, {\n              label: \"취소\",\n              color: \"gray\",\n              onClick: _cache[0] || (_cache[0] = $event => (isUploadModalOpen.value = false))\n            }),\n            _createVNode(_component_UButton, {\n              label: \"업로드\",\n              color: \"blue\",\n              onClick: handleFileUpload\n            })\n          ])\n        ])\n      ]),\n      _: 1\n    }, 8, [\"modelValue\"]),\n    _createElementVNode(\"div\", _hoisted_4, [\n      _createElementVNode(\"div\", _hoisted_5, [\n        _createVNode(_component_UButton, {\n          label: \"엑셀샘플 다운로드\",\n          color: \"gray\",\n          onClick: onClickDownload\n        }),\n        _createVNode(_component_UButton, {\n          label: \"엑셀업로드\",\n          color: \"gray\",\n          onClick: onClickUpload\n        }),\n        _createVNode(_component_UButton, {\n          label: \"학생 QR카드 인쇄하기\",\n          color: \"gray\",\n          onClick: printStudentQR\n        }),\n        _createVNode(_component_UButton, {\n          label: \"초기화\",\n          color: \"red\",\n          onClick: printStudentQR,\n          style: {\"margin-left\":\"auto\"}\n        })\n      ]),\n      _createElementVNode(\"div\", _hoisted_6, [\n        _createElementVNode(\"p\", _hoisted_7, _toDisplayString(teacherInfo.value?.mb_name) + \" 선생님, 환영합니다 👋\", 1),\n        _createElementVNode(\"button\", {\n          class: \"flex items-center gap-2 bg-white text-red-500 border border-red-300 px-3 py-1 rounded-full shadow-sm hover:bg-red-50 transition\",\n          onClick: logout\n        }, _cache[5] || (_cache[5] = [\n          _createElementVNode(\"span\", { class: \"i-heroicons-arrow-right-on-rectangle w-4 h-4\" }, null, -1),\n          _createTextVNode(\" 로그아웃 \")\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createElementVNode(\"div\", _hoisted_9, [\n          _cache[6] || (_cache[6] = _createElementVNode(\"p\", { class: \"text-sm opacity-80\" }, \"국고 잔액\", -1)),\n          _createElementVNode(\"p\", _hoisted_10, [\n            _createElementVNode(\"span\", null, [\n              _createTextVNode(\" 💰 \" + _toDisplayString(Number(teacherInfo.value?.mb_point || 0).toLocaleString()) + \" \", 1),\n              _createElementVNode(\"span\", _hoisted_11, _toDisplayString(teacherInfo.value?.currency_name), 1)\n            ])\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_12, [\n        _createElementVNode(\"div\", _hoisted_13, [\n          _createElementVNode(\"div\", _hoisted_14, [\n            _cache[7] || (_cache[7] = _createElementVNode(\"p\", { class: \"text-sm opacity-80\" }, \"누적 세금\", -1)),\n            _createElementVNode(\"p\", _hoisted_15, [\n              _createTextVNode(\" 🧾 \" + _toDisplayString(Number(teacherInfo.value?.tax || 0).toLocaleString()) + \" \", 1),\n              _createElementVNode(\"span\", _hoisted_16, _toDisplayString(teacherInfo.value?.currency_name), 1)\n            ])\n          ]),\n          _createVNode(_component_UButton, {\n            label: \"내역\",\n            color: \"white\",\n            class: \"text-orange-800 bg-white bg-opacity-90 hover:bg-opacity-100\"\n          })\n        ]),\n        _createElementVNode(\"div\", _hoisted_17, [\n          _createElementVNode(\"div\", _hoisted_18, [\n            _cache[8] || (_cache[8] = _createElementVNode(\"p\", { class: \"text-sm opacity-80\" }, \"누적 벌금\", -1)),\n            _createElementVNode(\"p\", _hoisted_19, [\n              _createTextVNode(\" 🚨 \" + _toDisplayString(Number(teacherInfo.value?.penalty || 0).toLocaleString()) + \" \", 1),\n              _createElementVNode(\"span\", _hoisted_20, _toDisplayString(teacherInfo.value?.currency_name), 1)\n            ])\n          ]),\n          _createVNode(_component_UButton, {\n            label: \"내역\",\n            color: \"white\",\n            class: \"text-rose-800 bg-white bg-opacity-90 hover:bg-opacity-100\"\n          })\n        ])\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_21, [\n      _createElementVNode(\"div\", _hoisted_22, [\n        _cache[9] || (_cache[9] = _createElementVNode(\"p\", { class: \"text-lg font-semibold text-gray-700\" }, \"우리반 설정\", -1)),\n        _createElementVNode(\"div\", _hoisted_23, [\n          _createVNode(_component_UInput, {\n            modelValue: teacherInfo.value.class_name,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => ((teacherInfo.value.class_name) = $event)),\n            placeholder: \"학급명 (예: 젤리)\",\n            class: \"flex-1\"\n          }, null, 8, [\"modelValue\"]),\n          _createVNode(_component_UInput, {\n            modelValue: teacherInfo.value.currency_name,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => ((teacherInfo.value.currency_name) = $event)),\n            placeholder: \"화폐이름 (예: 젤리코인)\",\n            class: \"flex-1\"\n          }, null, 8, [\"modelValue\"]),\n          _createVNode(_component_UButton, {\n            label: \"저장\",\n            color: \"blue\",\n            onClick: saveClassSettings\n          })\n        ])\n      ]),\n      _cache[10] || (_cache[10] = _createElementVNode(\"div\", { class: \"flex justify-between items-center\" }, [\n        _createElementVNode(\"p\", { class: \"text-lg font-semibold text-gray-700\" }, \" 우리반 학생 \")\n      ], -1)),\n      _createElementVNode(\"div\", _hoisted_24, [\n        _createElementVNode(\"div\", _hoisted_25, [\n          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(studentOptions.value, (student) => {\n            return (_openBlock(), _createElementBlock(\"div\", {\n              key: student.value,\n              onClick: $event => (handleStudentClick(student.value, student.label)),\n              class: \"px-4 py-1 bg-gray-100 hover:bg-gray-200 text-gray-800 rounded-full text-sm cursor-pointer transition\"\n            }, _toDisplayString(student.label), 9, _hoisted_26))\n          }), 128))\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_27, [\n        (selectedStudentName.value)\n          ? (_openBlock(), _createBlock(_component_UButton, {\n              key: 0,\n              label: `${selectedStudentName.value} 학생으로 로그인 하기`,\n              color: \"blue\",\n              class: \"w-full justify-center text-center\",\n              onClick: onClickLogin\n            }, null, 8, [\"label\"]))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _createElementVNode(\"div\", _hoisted_28, [\n      _cache[12] || (_cache[12] = _createElementVNode(\"h2\", { class: \"uppercase text-xs font-semibold text-gray-400 mb-4\" }, \"최근 입출금내역\", -1)),\n      _createElementVNode(\"div\", _hoisted_29, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(points.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.idx,\n            class: \"flex items-center gap-4 dark:hover:text-gray-300 group\"\n          }, [\n            _createElementVNode(\"span\", _hoisted_30, _toDisplayString(item.description) + \" (\" + _toDisplayString(item.point_type === 'save' ? '+' : '-') + _toDisplayString(item.point.toLocaleString()) + \"P) \", 1),\n            _cache[11] || (_cache[11] = _createElementVNode(\"div\", { class: \"flex-1 border-b border-dashed border-gray-300 dark:border-gray-800 group-hover:border-gray-700 mt-1.5\" }, null, -1)),\n            _createElementVNode(\"span\", _hoisted_31, _toDisplayString(item.c_datetime), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})\n\n\n\nexport default _sfc_main",
      "start": 1748577034908,
      "end": 1748577034912,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748577034912,
      "end": 1748577034912,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748577034912,
      "end": 1748577034918,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748577034918,
      "end": 1748577034918,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "result": "\nconst __nuxt_page_meta = null\nexport default __nuxt_page_meta\n",
      "start": 1748577034918,
      "end": 1748577034919,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": "AAAA;AAAA;AAAA;"
      }
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748577034919,
      "end": 1748577034919,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748577034919,
      "end": 1748577034919,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1748577034919,
      "end": 1748577034919,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748577034919,
      "end": 1748577034919,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1748577034919,
      "end": 1748577034919,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1748577034919,
      "end": 1748577034919,
      "order": "normal"
    }
  ]
}
