{
  "resolvedId": "/Users/jang-yeong-ug/Documents/zooper/pages/teacher/index.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<script setup>\nimport { onMounted, ref } from 'vue'\nimport { apiPost,apiPoint } from '@/common/api'\n\n//  QR\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\nconst isScanning = ref(false)\nconst error = ref('')\n\nconst startScan = () => {\n\nif (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  if(amountInput.value > memberPoint.value) {\n    alert('잔액이 부족합니다.')\n    return\n}\n  \n  isScanning.value = true\n  error.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\nif(url === sessionStorage.getItem('t_idnt_code')) {\n  handleDeposit()\n  } else {\n    isScanning.value = false\n      return alert('인증오류')\n    }\n  if (!url) return\n\n  isScanning.value = false\n//   router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\n//  QR\nconst points = ref([])\nconst page = ref(1)\nconst isLoading = ref(false)\nconst hasMore = ref(true)\n\nconst studentOptions = ref([])\nconst selectedStudent = ref(null)\nconst amountInput = ref(null)\n\nconst fetchPoints = async (v) => {\n  if (isLoading.value || !hasMore.value) return\n\n  const idnt_code = sessionStorage.getItem('t_idnt_code')\n  if (!idnt_code) return\n\n  isLoading.value = true\n\n  try {\n    const res = await apiPost('bank.php', {\n      mode: 'history',\n      idnt_code,\n      page: v || page.value,\n      rows: 10,\n    })\n\n    if (res.result === 'SUCCESS' && Array.isArray(res.data)) {\n      if (res.data.length === 0) {\n        hasMore.value = false\n      } else {\n        points.value.push(...res.data)\n        page.value++\n      }\n    } else {\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('포인트 조회 실패:', error)\n    hasMore.value = false\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst fetchStudents = async () => {\n  const teacher = JSON.parse(sessionStorage.getItem('teacher'))?.idx\n  if (!teacher) return\n\n  const res = await apiPost('member.php', {\n    mode: 'studentList',\n    teacher\n  })\n\n  if (res.result === 'SUCCESS') {\n    memberPoint.value = await apiPoint()\n    studentOptions.value = res.data.map(s => ({\n      label: s.student_name,\n      value: s.idnt_code\n    }))\n  }\n}\n\nonMounted(async () => {\n\n  fetchPoints()\n  fetchStudents()\n  window.addEventListener('scroll', handleScroll)\n\n  const point = await apiPoint()\n  memberPoint.value = point\n  console.log('내 포인트:', point)\n})\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight\n  const bottomPosition = document.body.offsetHeight - 50\n  if (scrollPosition >= bottomPosition) {\n    fetchPoints()\n  }\n}\n\n\nconst memberPoint = ref(0)\nconst handleDeposit = async () => {\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  const res = await apiPost('bank.php', {\n    mode: 'deposit',\n    from_idnt_code: sessionStorage.getItem('t_idnt_code'),\n    to_idnt_code: selectedStudent.value,\n    point: parseInt(amountInput.value)\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('출금 완료')\n\n    // 리스트 초기화 및 다시 조회\n    page.value = 1\n    points.value = []\n    hasMore.value = true\n    await fetchPoints(1)\n\n    amountInput.value = null\n    selectedStudent.value = null\n  } else {\n    alert(res.message || '출금에 실패했습니다.')\n  }\n}\n\n</script>\n\n<template>\n  <div>\n      <div class=\"space-y-4\">\n    <!-- 환영 메시지 -->\n    <div class=\"flex justify-between items-center\">\n      <p class=\"text-lg font-semibold text-gray-700\">선생님, 환영합니다 👋</p>\n      <button\n        class=\"flex items-center gap-2 bg-white text-red-500 border border-red-300 px-3 py-1 rounded-full shadow-sm hover:bg-red-50 transition\"\n        @click=\"logout\"\n      >\n        <span class=\"i-heroicons-arrow-right-on-rectangle w-4 h-4\" />\n        로그아웃\n      </button>\n    </div>\n        <!-- 내 잔액 -->\n    <div class=\"col-span-2 rounded-2xl shadow-md p-4 bg-gradient-to-r from-green-400 to-blue-500 text-white flex justify-between items-center\">\n      <div class=\"flex flex-col justify-center\">\n        <p class=\"text-sm opacity-80\">국고 잔액</p>\n        <p class=\"text-2xl font-bold\">\n          <span>\n          💰 {{ Number(memberPoint || 0).toLocaleString() }} <span class=\"text-sm font-normal align-middle\">돌맹이</span>\n          </span>\n        </p>\n      </div>\n      <UButton\n        label=\"이체하기\"\n        color=\"white\"\n        class=\"text-blue-800 bg-white bg-opacity-90 hover:bg-opacity-100\"\n        @click=\"$router.push('/transfer')\"\n      />\n    </div>\n    </div>\n      <div>\n        <div class=\"mb-6 flex items-center gap-3\">\n        <div\n            class=\"flex-none rounded-full p-1 text-primary-500 bg-primary-500/10\"\n        >\n            <div class=\"h-1.5 w-1.5 rounded-full bg-current\"></div>\n        </div>\n        <h2 class=\"uppercase text-xs font-semibold text-gray-400\">\n            나의 잔액 {{ memberPoint }}\n        </h2>\n        </div>\n        <p class=\"mt-2 text-sm text-gray-600 dark:text-gray-400\">\n        입금 할 친구를 선택하고 금액을 입력하세요\n        </p>\n        <div class=\"flex items-center gap-3 mt-6\">\n       <USelect\n          v-model=\"selectedStudent\"\n          :options=\"studentOptions\"\n          placeholder=\"학생 선택\"\n          class=\"w-40\"\n          size=\"lg\"\n        />\n        <UInput\n            v-model=\"amountInput\"\n            placeholder=\"입금액을 입력하세요\"\n            icon=\"i-heroicons-currency-dollar\"\n            class=\"flex-1 text-right\"\n            input-class=\"text-right\"\n            type=\"tel\"\n            size=\"lg\"\n        />\n        <UButton label=\"이체하기\" size=\"lg\" color=\"black\" @click=\"startScan()\"/>\n        </div>\n        <div v-if=\"isScanning\">\n            <div style=\"background-color: #000; position: fixed; top:0; left:0; width:100%; height:100%; z-index:99; opacity: 0.6;\"></div>\n             <qrcode-stream\n             style=\"top:50%; left:50%; z-index:99; position: fixed; transform: translate(-50%,-50%); max-width:400px; max-height:400px;\"\n            @detect=\"onDetect\"\n            @error=\"onError\"\n        />\n        </div>\n    </div>\n    <div class=\"mt-10\">\n      <h2 class=\"uppercase text-xs font-semibold text-gray-400 mb-4\">최근 입출금내역</h2>\n      <div class=\"space-y-5\">\n        <div\n        v-for=\"item in points\"\n        :key=\"item.idx\"\n        class=\"flex items-center gap-4 dark:hover:text-gray-300 group\"\n        >\n        <span class=\"text-sm leading-none\">\n            {{ item.description }} ({{ item.point_type === 'save' ? '+' : '-' }}{{ item.point.toLocaleString() }}P)\n        </span>\n        <div class=\"flex-1 border-b border-dashed border-gray-300 dark:border-gray-800 group-hover:border-gray-700 mt-1.5\"></div>\n        <span class=\"text-xs text-gray-500 leading-none\">\n            {{ item.c_datetime }}\n        </span>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  components: {\n    QrcodeStream: () => import('vue-qrcode-reader').then(m => m.QrcodeStream)\n  }\n}\n</script>",
      "start": 1748513874436,
      "end": 1748513874500,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "pre"
    },
    {
      "name": "content-slot",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "pre"
    },
    {
      "name": "fontaine-transform",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"space-y-4\" }\nconst _hoisted_2 = { class: \"flex justify-between items-center\" }\nconst _hoisted_3 = { class: \"col-span-2 rounded-2xl shadow-md p-4 bg-gradient-to-r from-green-400 to-blue-500 text-white flex justify-between items-center\" }\nconst _hoisted_4 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_5 = { class: \"text-2xl font-bold\" }\nconst _hoisted_6 = { class: \"mb-6 flex items-center gap-3\" }\nconst _hoisted_7 = { class: \"uppercase text-xs font-semibold text-gray-400\" }\nconst _hoisted_8 = { class: \"flex items-center gap-3 mt-6\" }\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = { class: \"mt-10\" }\nconst _hoisted_11 = { class: \"space-y-5\" }\nconst _hoisted_12 = { class: \"text-sm leading-none\" }\nconst _hoisted_13 = { class: \"text-xs text-gray-500 leading-none\" }\n\nimport { onMounted, ref } from 'vue'\nimport { apiPost,apiPoint } from '@/common/api'\n\n//  QR\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\n\nconst __default__ = {\n  components: {\n    QrcodeStream: () => import('vue-qrcode-reader').then(m => m.QrcodeStream)\n  }\n}\n\n\nconst _sfc_main = /*@__PURE__*/Object.assign(__default__, {\n  __name: 'index',\n  setup(__props) {\n\nconst isScanning = ref(false)\nconst error = ref('')\n\nconst startScan = () => {\n\nif (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  if(amountInput.value > memberPoint.value) {\n    alert('잔액이 부족합니다.')\n    return\n}\n  \n  isScanning.value = true\n  error.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\nif(url === sessionStorage.getItem('t_idnt_code')) {\n  handleDeposit()\n  } else {\n    isScanning.value = false\n      return alert('인증오류')\n    }\n  if (!url) return\n\n  isScanning.value = false\n//   router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\n//  QR\nconst points = ref([])\nconst page = ref(1)\nconst isLoading = ref(false)\nconst hasMore = ref(true)\n\nconst studentOptions = ref([])\nconst selectedStudent = ref(null)\nconst amountInput = ref(null)\n\nconst fetchPoints = async (v) => {\n  if (isLoading.value || !hasMore.value) return\n\n  const idnt_code = sessionStorage.getItem('t_idnt_code')\n  if (!idnt_code) return\n\n  isLoading.value = true\n\n  try {\n    const res = await apiPost('bank.php', {\n      mode: 'history',\n      idnt_code,\n      page: v || page.value,\n      rows: 10,\n    })\n\n    if (res.result === 'SUCCESS' && Array.isArray(res.data)) {\n      if (res.data.length === 0) {\n        hasMore.value = false\n      } else {\n        points.value.push(...res.data)\n        page.value++\n      }\n    } else {\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('포인트 조회 실패:', error)\n    hasMore.value = false\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst fetchStudents = async () => {\n  const teacher = JSON.parse(sessionStorage.getItem('teacher'))?.idx\n  if (!teacher) return\n\n  const res = await apiPost('member.php', {\n    mode: 'studentList',\n    teacher\n  })\n\n  if (res.result === 'SUCCESS') {\n    memberPoint.value = await apiPoint()\n    studentOptions.value = res.data.map(s => ({\n      label: s.student_name,\n      value: s.idnt_code\n    }))\n  }\n}\n\nonMounted(async () => {\n\n  fetchPoints()\n  fetchStudents()\n  window.addEventListener('scroll', handleScroll)\n\n  const point = await apiPoint()\n  memberPoint.value = point\n  console.log('내 포인트:', point)\n})\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight\n  const bottomPosition = document.body.offsetHeight - 50\n  if (scrollPosition >= bottomPosition) {\n    fetchPoints()\n  }\n}\n\n\nconst memberPoint = ref(0)\nconst handleDeposit = async () => {\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  const res = await apiPost('bank.php', {\n    mode: 'deposit',\n    from_idnt_code: sessionStorage.getItem('t_idnt_code'),\n    to_idnt_code: selectedStudent.value,\n    point: parseInt(amountInput.value)\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('출금 완료')\n\n    // 리스트 초기화 및 다시 조회\n    page.value = 1\n    points.value = []\n    hasMore.value = true\n    await fetchPoints(1)\n\n    amountInput.value = null\n    selectedStudent.value = null\n  } else {\n    alert(res.message || '출금에 실패했습니다.')\n  }\n}\n\n\nreturn (_ctx, _cache) => {\n  const _component_UButton = _resolveComponent(\"UButton\")\n  const _component_USelect = _resolveComponent(\"USelect\")\n  const _component_UInput = _resolveComponent(\"UInput\")\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[6] || (_cache[6] = _createElementVNode(\"p\", { class: \"text-lg font-semibold text-gray-700\" }, \"선생님, 환영합니다 👋\", -1)),\n        _createElementVNode(\"button\", {\n          class: \"flex items-center gap-2 bg-white text-red-500 border border-red-300 px-3 py-1 rounded-full shadow-sm hover:bg-red-50 transition\",\n          onClick: _cache[0] || (_cache[0] = (...args) => (_ctx.logout && _ctx.logout(...args)))\n        }, _cache[5] || (_cache[5] = [\n          _createElementVNode(\"span\", { class: \"i-heroicons-arrow-right-on-rectangle w-4 h-4\" }, null, -1),\n          _createTextVNode(\" 로그아웃 \")\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _cache[8] || (_cache[8] = _createElementVNode(\"p\", { class: \"text-sm opacity-80\" }, \"국고 잔액\", -1)),\n          _createElementVNode(\"p\", _hoisted_5, [\n            _createElementVNode(\"span\", null, [\n              _createTextVNode(\" 💰 \" + _toDisplayString(Number(memberPoint.value || 0).toLocaleString()) + \" \", 1),\n              _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"text-sm font-normal align-middle\" }, \"돌맹이\", -1))\n            ])\n          ])\n        ]),\n        _createVNode(_component_UButton, {\n          label: \"이체하기\",\n          color: \"white\",\n          class: \"text-blue-800 bg-white bg-opacity-90 hover:bg-opacity-100\",\n          onClick: _cache[1] || (_cache[1] = $event => (_ctx.$router.push('/transfer')))\n        })\n      ])\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_6, [\n        _cache[9] || (_cache[9] = _createElementVNode(\"div\", { class: \"flex-none rounded-full p-1 text-primary-500 bg-primary-500/10\" }, [\n          _createElementVNode(\"div\", { class: \"h-1.5 w-1.5 rounded-full bg-current\" })\n        ], -1)),\n        _createElementVNode(\"h2\", _hoisted_7, \" 나의 잔액 \" + _toDisplayString(memberPoint.value), 1)\n      ]),\n      _cache[11] || (_cache[11] = _createElementVNode(\"p\", { class: \"mt-2 text-sm text-gray-600 dark:text-gray-400\" }, \" 입금 할 친구를 선택하고 금액을 입력하세요 \", -1)),\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createVNode(_component_USelect, {\n          modelValue: selectedStudent.value,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => ((selectedStudent).value = $event)),\n          options: studentOptions.value,\n          placeholder: \"학생 선택\",\n          class: \"w-40\",\n          size: \"lg\"\n        }, null, 8, [\"modelValue\", \"options\"]),\n        _createVNode(_component_UInput, {\n          modelValue: amountInput.value,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => ((amountInput).value = $event)),\n          placeholder: \"입금액을 입력하세요\",\n          icon: \"i-heroicons-currency-dollar\",\n          class: \"flex-1 text-right\",\n          \"input-class\": \"text-right\",\n          type: \"tel\",\n          size: \"lg\"\n        }, null, 8, [\"modelValue\"]),\n        _createVNode(_component_UButton, {\n          label: \"이체하기\",\n          size: \"lg\",\n          color: \"black\",\n          onClick: _cache[4] || (_cache[4] = $event => (startScan()))\n        })\n      ]),\n      (isScanning.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n            _cache[10] || (_cache[10] = _createElementVNode(\"div\", { style: {\"background-color\":\"#000\",\"position\":\"fixed\",\"top\":\"0\",\"left\":\"0\",\"width\":\"100%\",\"height\":\"100%\",\"z-index\":\"99\",\"opacity\":\"0.6\"} }, null, -1)),\n            _createVNode(_unref(QrcodeStream), {\n              style: {\"top\":\"50%\",\"left\":\"50%\",\"z-index\":\"99\",\"position\":\"fixed\",\"transform\":\"translate(-50%,-50%)\",\"max-width\":\"400px\",\"max-height\":\"400px\"},\n              onDetect: onDetect,\n              onError: onError\n            })\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_10, [\n      _cache[13] || (_cache[13] = _createElementVNode(\"h2\", { class: \"uppercase text-xs font-semibold text-gray-400 mb-4\" }, \"최근 입출금내역\", -1)),\n      _createElementVNode(\"div\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(points.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.idx,\n            class: \"flex items-center gap-4 dark:hover:text-gray-300 group\"\n          }, [\n            _createElementVNode(\"span\", _hoisted_12, _toDisplayString(item.description) + \" (\" + _toDisplayString(item.point_type === 'save' ? '+' : '-') + _toDisplayString(item.point.toLocaleString()) + \"P) \", 1),\n            _cache[12] || (_cache[12] = _createElementVNode(\"div\", { class: \"flex-1 border-b border-dashed border-gray-300 dark:border-gray-800 group-hover:border-gray-700 mt-1.5\" }, null, -1)),\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.c_datetime), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})\n\n\n\nexport default _sfc_main",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1748513874500,
      "end": 1748513874500,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1748513874500,
      "end": 1748513874503,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1748513874503,
      "end": 1748513874503,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1748513874503,
      "end": 1748513874503,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1748513874503,
      "end": 1748513874503,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1748513874503,
      "end": 1748513874504,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "result": "import { default as __nuxt_component_0 } from \"/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue\";\nimport { default as __nuxt_component_1 } from \"/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxt/ui/dist/runtime/components/forms/Select.vue\";\nimport { default as __nuxt_component_2 } from \"/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxt/ui/dist/runtime/components/forms/Input.vue\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"space-y-4\" }\nconst _hoisted_2 = { class: \"flex justify-between items-center\" }\nconst _hoisted_3 = { class: \"col-span-2 rounded-2xl shadow-md p-4 bg-gradient-to-r from-green-400 to-blue-500 text-white flex justify-between items-center\" }\nconst _hoisted_4 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_5 = { class: \"text-2xl font-bold\" }\nconst _hoisted_6 = { class: \"mb-6 flex items-center gap-3\" }\nconst _hoisted_7 = { class: \"uppercase text-xs font-semibold text-gray-400\" }\nconst _hoisted_8 = { class: \"flex items-center gap-3 mt-6\" }\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = { class: \"mt-10\" }\nconst _hoisted_11 = { class: \"space-y-5\" }\nconst _hoisted_12 = { class: \"text-sm leading-none\" }\nconst _hoisted_13 = { class: \"text-xs text-gray-500 leading-none\" }\n\nimport { onMounted, ref } from 'vue'\nimport { apiPost,apiPoint } from '@/common/api'\n\n//  QR\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\n\nconst __default__ = {\n  components: {\n    QrcodeStream: () => import('vue-qrcode-reader').then(m => m.QrcodeStream)\n  }\n}\n\n\nconst _sfc_main = /*@__PURE__*/Object.assign(__default__, {\n  __name: 'index',\n  setup(__props) {\n\nconst isScanning = ref(false)\nconst error = ref('')\n\nconst startScan = () => {\n\nif (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  if(amountInput.value > memberPoint.value) {\n    alert('잔액이 부족합니다.')\n    return\n}\n  \n  isScanning.value = true\n  error.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\nif(url === sessionStorage.getItem('t_idnt_code')) {\n  handleDeposit()\n  } else {\n    isScanning.value = false\n      return alert('인증오류')\n    }\n  if (!url) return\n\n  isScanning.value = false\n//   router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\n//  QR\nconst points = ref([])\nconst page = ref(1)\nconst isLoading = ref(false)\nconst hasMore = ref(true)\n\nconst studentOptions = ref([])\nconst selectedStudent = ref(null)\nconst amountInput = ref(null)\n\nconst fetchPoints = async (v) => {\n  if (isLoading.value || !hasMore.value) return\n\n  const idnt_code = sessionStorage.getItem('t_idnt_code')\n  if (!idnt_code) return\n\n  isLoading.value = true\n\n  try {\n    const res = await apiPost('bank.php', {\n      mode: 'history',\n      idnt_code,\n      page: v || page.value,\n      rows: 10,\n    })\n\n    if (res.result === 'SUCCESS' && Array.isArray(res.data)) {\n      if (res.data.length === 0) {\n        hasMore.value = false\n      } else {\n        points.value.push(...res.data)\n        page.value++\n      }\n    } else {\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('포인트 조회 실패:', error)\n    hasMore.value = false\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst fetchStudents = async () => {\n  const teacher = JSON.parse(sessionStorage.getItem('teacher'))?.idx\n  if (!teacher) return\n\n  const res = await apiPost('member.php', {\n    mode: 'studentList',\n    teacher\n  })\n\n  if (res.result === 'SUCCESS') {\n    memberPoint.value = await apiPoint()\n    studentOptions.value = res.data.map(s => ({\n      label: s.student_name,\n      value: s.idnt_code\n    }))\n  }\n}\n\nonMounted(async () => {\n\n  fetchPoints()\n  fetchStudents()\n  window.addEventListener('scroll', handleScroll)\n\n  const point = await apiPoint()\n  memberPoint.value = point\n  console.log('내 포인트:', point)\n})\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight\n  const bottomPosition = document.body.offsetHeight - 50\n  if (scrollPosition >= bottomPosition) {\n    fetchPoints()\n  }\n}\n\n\nconst memberPoint = ref(0)\nconst handleDeposit = async () => {\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  const res = await apiPost('bank.php', {\n    mode: 'deposit',\n    from_idnt_code: sessionStorage.getItem('t_idnt_code'),\n    to_idnt_code: selectedStudent.value,\n    point: parseInt(amountInput.value)\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('출금 완료')\n\n    // 리스트 초기화 및 다시 조회\n    page.value = 1\n    points.value = []\n    hasMore.value = true\n    await fetchPoints(1)\n\n    amountInput.value = null\n    selectedStudent.value = null\n  } else {\n    alert(res.message || '출금에 실패했습니다.')\n  }\n}\n\n\nreturn (_ctx, _cache) => {\n  const _component_UButton = __nuxt_component_0\n  const _component_USelect = __nuxt_component_1\n  const _component_UInput = __nuxt_component_2\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[6] || (_cache[6] = _createElementVNode(\"p\", { class: \"text-lg font-semibold text-gray-700\" }, \"선생님, 환영합니다 👋\", -1)),\n        _createElementVNode(\"button\", {\n          class: \"flex items-center gap-2 bg-white text-red-500 border border-red-300 px-3 py-1 rounded-full shadow-sm hover:bg-red-50 transition\",\n          onClick: _cache[0] || (_cache[0] = (...args) => (_ctx.logout && _ctx.logout(...args)))\n        }, _cache[5] || (_cache[5] = [\n          _createElementVNode(\"span\", { class: \"i-heroicons-arrow-right-on-rectangle w-4 h-4\" }, null, -1),\n          _createTextVNode(\" 로그아웃 \")\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _cache[8] || (_cache[8] = _createElementVNode(\"p\", { class: \"text-sm opacity-80\" }, \"국고 잔액\", -1)),\n          _createElementVNode(\"p\", _hoisted_5, [\n            _createElementVNode(\"span\", null, [\n              _createTextVNode(\" 💰 \" + _toDisplayString(Number(memberPoint.value || 0).toLocaleString()) + \" \", 1),\n              _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"text-sm font-normal align-middle\" }, \"돌맹이\", -1))\n            ])\n          ])\n        ]),\n        _createVNode(_component_UButton, {\n          label: \"이체하기\",\n          color: \"white\",\n          class: \"text-blue-800 bg-white bg-opacity-90 hover:bg-opacity-100\",\n          onClick: _cache[1] || (_cache[1] = $event => (_ctx.$router.push('/transfer')))\n        })\n      ])\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_6, [\n        _cache[9] || (_cache[9] = _createElementVNode(\"div\", { class: \"flex-none rounded-full p-1 text-primary-500 bg-primary-500/10\" }, [\n          _createElementVNode(\"div\", { class: \"h-1.5 w-1.5 rounded-full bg-current\" })\n        ], -1)),\n        _createElementVNode(\"h2\", _hoisted_7, \" 나의 잔액 \" + _toDisplayString(memberPoint.value), 1)\n      ]),\n      _cache[11] || (_cache[11] = _createElementVNode(\"p\", { class: \"mt-2 text-sm text-gray-600 dark:text-gray-400\" }, \" 입금 할 친구를 선택하고 금액을 입력하세요 \", -1)),\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createVNode(_component_USelect, {\n          modelValue: selectedStudent.value,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => ((selectedStudent).value = $event)),\n          options: studentOptions.value,\n          placeholder: \"학생 선택\",\n          class: \"w-40\",\n          size: \"lg\"\n        }, null, 8, [\"modelValue\", \"options\"]),\n        _createVNode(_component_UInput, {\n          modelValue: amountInput.value,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => ((amountInput).value = $event)),\n          placeholder: \"입금액을 입력하세요\",\n          icon: \"i-heroicons-currency-dollar\",\n          class: \"flex-1 text-right\",\n          \"input-class\": \"text-right\",\n          type: \"tel\",\n          size: \"lg\"\n        }, null, 8, [\"modelValue\"]),\n        _createVNode(_component_UButton, {\n          label: \"이체하기\",\n          size: \"lg\",\n          color: \"black\",\n          onClick: _cache[4] || (_cache[4] = $event => (startScan()))\n        })\n      ]),\n      (isScanning.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n            _cache[10] || (_cache[10] = _createElementVNode(\"div\", { style: {\"background-color\":\"#000\",\"position\":\"fixed\",\"top\":\"0\",\"left\":\"0\",\"width\":\"100%\",\"height\":\"100%\",\"z-index\":\"99\",\"opacity\":\"0.6\"} }, null, -1)),\n            _createVNode(_unref(QrcodeStream), {\n              style: {\"top\":\"50%\",\"left\":\"50%\",\"z-index\":\"99\",\"position\":\"fixed\",\"transform\":\"translate(-50%,-50%)\",\"max-width\":\"400px\",\"max-height\":\"400px\"},\n              onDetect: onDetect,\n              onError: onError\n            })\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_10, [\n      _cache[13] || (_cache[13] = _createElementVNode(\"h2\", { class: \"uppercase text-xs font-semibold text-gray-400 mb-4\" }, \"최근 입출금내역\", -1)),\n      _createElementVNode(\"div\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(points.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.idx,\n            class: \"flex items-center gap-4 dark:hover:text-gray-300 group\"\n          }, [\n            _createElementVNode(\"span\", _hoisted_12, _toDisplayString(item.description) + \" (\" + _toDisplayString(item.point_type === 'save' ? '+' : '-') + _toDisplayString(item.point.toLocaleString()) + \"P) \", 1),\n            _cache[12] || (_cache[12] = _createElementVNode(\"div\", { class: \"flex-1 border-b border-dashed border-gray-300 dark:border-gray-800 group-hover:border-gray-700 mt-1.5\" }, null, -1)),\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.c_datetime), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})\n\n\n\nexport default _sfc_main",
      "start": 1748513874504,
      "end": 1748513874504,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1748513874504,
      "end": 1748513874504,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "result": "import { __vitePreload } from \"\u0000vite/preload-helper.js\";import { default as __nuxt_component_0 } from \"/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxt/ui/dist/runtime/components/elements/Button.vue\";\nimport { default as __nuxt_component_1 } from \"/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxt/ui/dist/runtime/components/forms/Select.vue\";\nimport { default as __nuxt_component_2 } from \"/Users/jang-yeong-ug/Documents/zooper/node_modules/@nuxt/ui/dist/runtime/components/forms/Input.vue\";\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\"\n\nconst _hoisted_1 = { class: \"space-y-4\" }\nconst _hoisted_2 = { class: \"flex justify-between items-center\" }\nconst _hoisted_3 = { class: \"col-span-2 rounded-2xl shadow-md p-4 bg-gradient-to-r from-green-400 to-blue-500 text-white flex justify-between items-center\" }\nconst _hoisted_4 = { class: \"flex flex-col justify-center\" }\nconst _hoisted_5 = { class: \"text-2xl font-bold\" }\nconst _hoisted_6 = { class: \"mb-6 flex items-center gap-3\" }\nconst _hoisted_7 = { class: \"uppercase text-xs font-semibold text-gray-400\" }\nconst _hoisted_8 = { class: \"flex items-center gap-3 mt-6\" }\nconst _hoisted_9 = { key: 0 }\nconst _hoisted_10 = { class: \"mt-10\" }\nconst _hoisted_11 = { class: \"space-y-5\" }\nconst _hoisted_12 = { class: \"text-sm leading-none\" }\nconst _hoisted_13 = { class: \"text-xs text-gray-500 leading-none\" }\n\nimport { onMounted, ref } from 'vue'\nimport { apiPost,apiPoint } from '@/common/api'\n\n//  QR\nimport { QrcodeStream } from 'vue-qrcode-reader'\n\n\nconst __default__ = {\n  components: {\n    QrcodeStream: () => __vitePreload(() => import('vue-qrcode-reader'),__VITE_IS_MODERN__?\"__VITE_PRELOAD__\":void 0,import.meta.url).then(m => m.QrcodeStream)\n  }\n}\n\n\nconst _sfc_main = /*@__PURE__*/Object.assign(__default__, {\n  __name: 'index',\n  setup(__props) {\n\nconst isScanning = ref(false)\nconst error = ref('')\n\nconst startScan = () => {\n\nif (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  if(amountInput.value > memberPoint.value) {\n    alert('잔액이 부족합니다.')\n    return\n}\n  \n  isScanning.value = true\n  error.value = ''\n}\n\nconst onDetect = (detectedCodes) => {\n  const url = detectedCodes[0]?.rawValue\nif(url === sessionStorage.getItem('t_idnt_code')) {\n  handleDeposit()\n  } else {\n    isScanning.value = false\n      return alert('인증오류')\n    }\n  if (!url) return\n\n  isScanning.value = false\n//   router.push('/sign/' + url)\n}\n\nconst onError = (err) => {\n  error.value = '카메라 접근 실패'\n  console.error(err)\n  isScanning.value = false\n}\n\n\n//  QR\nconst points = ref([])\nconst page = ref(1)\nconst isLoading = ref(false)\nconst hasMore = ref(true)\n\nconst studentOptions = ref([])\nconst selectedStudent = ref(null)\nconst amountInput = ref(null)\n\nconst fetchPoints = async (v) => {\n  if (isLoading.value || !hasMore.value) return\n\n  const idnt_code = sessionStorage.getItem('t_idnt_code')\n  if (!idnt_code) return\n\n  isLoading.value = true\n\n  try {\n    const res = await apiPost('bank.php', {\n      mode: 'history',\n      idnt_code,\n      page: v || page.value,\n      rows: 10,\n    })\n\n    if (res.result === 'SUCCESS' && Array.isArray(res.data)) {\n      if (res.data.length === 0) {\n        hasMore.value = false\n      } else {\n        points.value.push(...res.data)\n        page.value++\n      }\n    } else {\n      hasMore.value = false\n    }\n  } catch (error) {\n    console.error('포인트 조회 실패:', error)\n    hasMore.value = false\n  } finally {\n    isLoading.value = false\n  }\n}\n\nconst fetchStudents = async () => {\n  const teacher = JSON.parse(sessionStorage.getItem('teacher'))?.idx\n  if (!teacher) return\n\n  const res = await apiPost('member.php', {\n    mode: 'studentList',\n    teacher\n  })\n\n  if (res.result === 'SUCCESS') {\n    memberPoint.value = await apiPoint()\n    studentOptions.value = res.data.map(s => ({\n      label: s.student_name,\n      value: s.idnt_code\n    }))\n  }\n}\n\nonMounted(async () => {\n\n  fetchPoints()\n  fetchStudents()\n  window.addEventListener('scroll', handleScroll)\n\n  const point = await apiPoint()\n  memberPoint.value = point\n  console.log('내 포인트:', point)\n})\n\nconst handleScroll = () => {\n  const scrollPosition = window.scrollY + window.innerHeight\n  const bottomPosition = document.body.offsetHeight - 50\n  if (scrollPosition >= bottomPosition) {\n    fetchPoints()\n  }\n}\n\n\nconst memberPoint = ref(0)\nconst handleDeposit = async () => {\n  if (!amountInput.value) {\n    alert('출금액을 입력해주세요')\n    return\n  }\n  if (!selectedStudent.value) {\n    alert('출금할 학생을 선택해주세요')\n    return\n  }\n\n  const res = await apiPost('bank.php', {\n    mode: 'deposit',\n    from_idnt_code: sessionStorage.getItem('t_idnt_code'),\n    to_idnt_code: selectedStudent.value,\n    point: parseInt(amountInput.value)\n  })\n\n  if (res.result === 'SUCCESS') {\n    alert('출금 완료')\n\n    // 리스트 초기화 및 다시 조회\n    page.value = 1\n    points.value = []\n    hasMore.value = true\n    await fetchPoints(1)\n\n    amountInput.value = null\n    selectedStudent.value = null\n  } else {\n    alert(res.message || '출금에 실패했습니다.')\n  }\n}\n\n\nreturn (_ctx, _cache) => {\n  const _component_UButton = __nuxt_component_0\n  const _component_USelect = __nuxt_component_1\n  const _component_UInput = __nuxt_component_2\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _cache[6] || (_cache[6] = _createElementVNode(\"p\", { class: \"text-lg font-semibold text-gray-700\" }, \"선생님, 환영합니다 👋\", -1)),\n        _createElementVNode(\"button\", {\n          class: \"flex items-center gap-2 bg-white text-red-500 border border-red-300 px-3 py-1 rounded-full shadow-sm hover:bg-red-50 transition\",\n          onClick: _cache[0] || (_cache[0] = (...args) => (_ctx.logout && _ctx.logout(...args)))\n        }, _cache[5] || (_cache[5] = [\n          _createElementVNode(\"span\", { class: \"i-heroicons-arrow-right-on-rectangle w-4 h-4\" }, null, -1),\n          _createTextVNode(\" 로그아웃 \")\n        ]))\n      ]),\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createElementVNode(\"div\", _hoisted_4, [\n          _cache[8] || (_cache[8] = _createElementVNode(\"p\", { class: \"text-sm opacity-80\" }, \"국고 잔액\", -1)),\n          _createElementVNode(\"p\", _hoisted_5, [\n            _createElementVNode(\"span\", null, [\n              _createTextVNode(\" 💰 \" + _toDisplayString(Number(memberPoint.value || 0).toLocaleString()) + \" \", 1),\n              _cache[7] || (_cache[7] = _createElementVNode(\"span\", { class: \"text-sm font-normal align-middle\" }, \"돌맹이\", -1))\n            ])\n          ])\n        ]),\n        _createVNode(_component_UButton, {\n          label: \"이체하기\",\n          color: \"white\",\n          class: \"text-blue-800 bg-white bg-opacity-90 hover:bg-opacity-100\",\n          onClick: _cache[1] || (_cache[1] = $event => (_ctx.$router.push('/transfer')))\n        })\n      ])\n    ]),\n    _createElementVNode(\"div\", null, [\n      _createElementVNode(\"div\", _hoisted_6, [\n        _cache[9] || (_cache[9] = _createElementVNode(\"div\", { class: \"flex-none rounded-full p-1 text-primary-500 bg-primary-500/10\" }, [\n          _createElementVNode(\"div\", { class: \"h-1.5 w-1.5 rounded-full bg-current\" })\n        ], -1)),\n        _createElementVNode(\"h2\", _hoisted_7, \" 나의 잔액 \" + _toDisplayString(memberPoint.value), 1)\n      ]),\n      _cache[11] || (_cache[11] = _createElementVNode(\"p\", { class: \"mt-2 text-sm text-gray-600 dark:text-gray-400\" }, \" 입금 할 친구를 선택하고 금액을 입력하세요 \", -1)),\n      _createElementVNode(\"div\", _hoisted_8, [\n        _createVNode(_component_USelect, {\n          modelValue: selectedStudent.value,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => ((selectedStudent).value = $event)),\n          options: studentOptions.value,\n          placeholder: \"학생 선택\",\n          class: \"w-40\",\n          size: \"lg\"\n        }, null, 8, [\"modelValue\", \"options\"]),\n        _createVNode(_component_UInput, {\n          modelValue: amountInput.value,\n          \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => ((amountInput).value = $event)),\n          placeholder: \"입금액을 입력하세요\",\n          icon: \"i-heroicons-currency-dollar\",\n          class: \"flex-1 text-right\",\n          \"input-class\": \"text-right\",\n          type: \"tel\",\n          size: \"lg\"\n        }, null, 8, [\"modelValue\"]),\n        _createVNode(_component_UButton, {\n          label: \"이체하기\",\n          size: \"lg\",\n          color: \"black\",\n          onClick: _cache[4] || (_cache[4] = $event => (startScan()))\n        })\n      ]),\n      (isScanning.value)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n            _cache[10] || (_cache[10] = _createElementVNode(\"div\", { style: {\"background-color\":\"#000\",\"position\":\"fixed\",\"top\":\"0\",\"left\":\"0\",\"width\":\"100%\",\"height\":\"100%\",\"z-index\":\"99\",\"opacity\":\"0.6\"} }, null, -1)),\n            _createVNode(_unref(QrcodeStream), {\n              style: {\"top\":\"50%\",\"left\":\"50%\",\"z-index\":\"99\",\"position\":\"fixed\",\"transform\":\"translate(-50%,-50%)\",\"max-width\":\"400px\",\"max-height\":\"400px\"},\n              onDetect: onDetect,\n              onError: onError\n            })\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _createElementVNode(\"div\", _hoisted_10, [\n      _cache[13] || (_cache[13] = _createElementVNode(\"h2\", { class: \"uppercase text-xs font-semibold text-gray-400 mb-4\" }, \"최근 입출금내역\", -1)),\n      _createElementVNode(\"div\", _hoisted_11, [\n        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(points.value, (item) => {\n          return (_openBlock(), _createElementBlock(\"div\", {\n            key: item.idx,\n            class: \"flex items-center gap-4 dark:hover:text-gray-300 group\"\n          }, [\n            _createElementVNode(\"span\", _hoisted_12, _toDisplayString(item.description) + \" (\" + _toDisplayString(item.point_type === 'save' ? '+' : '-') + _toDisplayString(item.point.toLocaleString()) + \"P) \", 1),\n            _cache[12] || (_cache[12] = _createElementVNode(\"div\", { class: \"flex-1 border-b border-dashed border-gray-300 dark:border-gray-800 group-hover:border-gray-700 mt-1.5\" }, null, -1)),\n            _createElementVNode(\"span\", _hoisted_13, _toDisplayString(item.c_datetime), 1)\n          ]))\n        }), 128))\n      ])\n    ])\n  ]))\n}\n}\n\n})\n\n\n\nexport default _sfc_main",
      "start": 1748513874504,
      "end": 1748513874504,
      "order": "normal",
      "sourcemaps": null
    },
    {
      "name": "vite:reporter",
      "start": 1748513874504,
      "end": 1748513874504,
      "order": "normal"
    }
  ]
}
